 HEX 10000000 CONSTANT MBMP 10000008 CONSTANT MBME 3F00B8A0 CONSTANT VMBW 3FC00000 CONSTANT VC4P VARIABLE RENDH VARIABLE RENDD VARIABLE RENDL VARIABLE RWH	VARIABLE RHT	VARIABLE TILEH VARIABLE TILES VARIABLE TILEB VARIABLE TILEMEM VARIABLE BINH VARIABLE BIND VARIABLE BWH VARIABLE BHT 3000C CONSTANT AMEM	3000D CONSTANT LMEM	30010 CONSTANT EMEM 30012 CONSTANT EGPU	30004 CONSTANT GMCR	38002 CONSTANT SCR 40003 CONSTANT GPWH	40004 CONSTANT GVWH	40005 CONSTANT GDPH	40008 CONSTANT GPTH : STORE0 4 + SWAP BEGIN DUP MBMP + 0 SWAP ! 4 + 2DUP = UNTIL 2DROP ; : RSV DUP FF000000 AND 18 RSHIFT SWAP DUP 00FF0000 AND 8 RSHIFT SWAP DUP 0000FF00 AND 8 LSHIFT SWAP FF AND 18 LSHIFT OR OR OR ; : RSV2 DUP FF00 AND 8 RSHIFT SWAP FF AND 8 LSHIFT OR ; : DROPMB VMBW 20 - @ DROP ;  60 MBMP ! 0 MBMP 4 + ! GPWH MBMP 8 + ! 8 MBMP C + ! 10 18 STORE0 GVWH MBMP 1C + ! 8 MBMP 20 + ! 24 2C STORE0 GDPH MBMP 30 + ! 4 MBMP 34 + ! 38 3C STORE0 GPTH MBMP 40 + ! 4 MBMP 44 + ! 48 60 STORE0 MBME VMBW ! MBMP 14 + @ RWH ! MBMP 18 + @ RHT ! RHT @ 3f + 40 / BHT ! RWH @ 3f + 40 / BWH ! DROPMB  30 MBMP ! 0 MBMP 4 + ! GMCR MBMP 8 + ! 8 MBMP C + ! 0 MBMP 10 + ! 3 MBMP 14 + ! 18 30 STORE0 MBME VMBW ! 0 MBMP 4 + ! SCR MBMP 8 + ! C MBMP C + ! 10 1C STORE0 MBME VMBW ! DROPMB  30 MBMP ! 0 MBMP 4 + ! SCR MBMP 8 + ! 8 MBMP C + ! 0 MBMP 10 + ! 5 MBMP 14 + ! EE6B280 mbmp 18 + ! 0 mbmp 1C + ! 20 30 STORE0 MBME VMBW ! 0 MBMP 4 + ! EGPU MBMP 8 + ! 4 MBMP C + ! 0 MBMP 10 + ! 1 MBMP 14 + ! 18 20 STORE0 mbme vmbw ! DROPMB  4000 TILEMEM ! 30 MBMP ! 0 MBMP 4 + ! AMEM MBMP 8 + ! C MBMP C + ! 0 MBMP 10 + ! 8000 MBMP 14 + ! 1000 mbmp 18 + ! 18 mbmp 1C + ! 20 30 STORE0 MBME VMBW ! MBMP 14 + @ TILEH ! 30 MBMP ! 0 MBMP 4 + ! LMEM MBMP 8 + ! 4 MBMP C + ! 0 MBMP 10 + ! TILEH @ MBMP 14 + ! 18 30 STORE0 MBME VMBW ! MBMP 14 + @ DUP TILES ! 4000 + TILEB ! DROPMB  30 MBMP ! 0 MBMP 4 + ! AMEM MBMP 8 + ! C MBMP C + ! 0 MBMP 10 + ! 10000 MBMP 14 + ! 1000 mbmp 18 + ! 18 mbmp 1C + ! 20 30 STORE0 MBME VMBW ! MBMP 14 + @ BINH ! 30 MBMP ! 0 MBMP 4 + ! LMEM MBMP 8 + ! 4 MBMP C + ! 0 MBMP 10 + ! BINH @ MBMP 14 + ! 18 30 STORE0 MBME VMBW ! MBMP 14 + @ BIND ! DROPMB  30 MBMP ! 0 MBMP 4 + ! AMEM MBMP 8 + ! C MBMP C + ! 0 MBMP 10 + ! 10000 MBMP 14 + ! 1000 mbmp 18 + ! 18 1C mbmp + ! 20 30 STORE0 MBME VMBW ! MBMP 14 + @ RENDH ! 30 MBMP ! 0 MBMP 4 + ! LMEM MBMP 8 + ! 4 MBMP C + ! 0 MBMP 10 + ! RENDH @ MBMP 14 + ! 18 30 STORE0 MBME VMBW ! MBMP 14 + @ RENDD ! MBMP 14 + @ RENDL ! DROPMB  VARIABLE P VARIABLE PBUF VARIABLE COUNTER 0 COUNTER ! : EMITWORD DUP . P @ DUP . ! P @ DUP @ . 4 + P ! ; : EMIT8 COUNTER @ 0 = IF 0 OR PBUF ! ELSE PBUF @ 8 LSHIFT OR PBUF ! THEN COUNTER @ 1 + 4 MOD COUNTER ! COUNTER @ 0 = IF PBUF @ EMITWORD THEN ; : EMIT16 EMIT8 EMIT8 ; : EMIT32 EMIT8 EMIT8 EMIT8 EMIT8 ; variable NVRT variable VVC4 variable MVC4 variable IVVC4 variable Q : ARM2GPU C0000000 OR ; : GPU2ARM 3FFFFFFF AND ; : SET_LOADPOS RENDL @ 7f + ffffff80 AND ;  : UPDATE_LOADPOS P @ Q @ - SET_LOADPOS + RENDL ! ; : SETPQ GPU2ARM DUP P ! DUP Q ! ; SET_LOADPOS  SETPQ 0 EMITWORD 3F 80 00 00 EMIT32 3F 80 00 00 EMIT32 3F 80 00 00 EMIT32 0 EMITWORD 0 EMITWORD 00 00 02 00 EMIT32 3F 80 00 00 EMIT32 3F 80 00 00 EMIT32 0 EMITWORD 0 EMITWORD 3F 80 00 00 EMIT32 02 00 02 00 EMIT32 3F 80 00 00 EMIT32 3F 80 00 00 EMIT32 0 EMITWORD 3F 80 00 00 EMIT32 0 EMITWORD  3 NVRT ! UPDATE_LOADPOS  SET_LOADPOS DUP IVVC4 ! SETPQ  00 02 01 00 EMIT32  3 VVC4 ! 2 MVC4 ! P @ 1 - P !  UPDATE_LOADPOS   variable SHADER variable RSHADER  SET_LOADPOS DUP SHADER ! SETPQ  958e0dbf RSV EMITWORD d1724823 RSV EMITWORD 818e7176 RSV EMITWORD 40024821 RSV EMITWORD 818e7376 RSV EMITWORD 10024862 RSV EMITWORD 819e7540 RSV EMITWORD 114248a3 RSV EMITWORD 809e7009 RSV EMITWORD 115049e3 RSV EMITWORD 809e7012 RSV EMITWORD 116049e3 RSV EMITWORD 159e76c0 RSV EMITWORD 30020ba7 RSV EMITWORD 009e7000 RSV EMITWORD 100009e7 RSV EMITWORD 009e7000 RSV EMITWORD 500009e7 RSV EMITWORD  P @ Q @ - SET_LOADPOS + RENDL !  SET_LOADPOS DUP RSHADER ! SETPQ  03 CC 6 4 * 01 EMIT32  SHADER @ RSV EMITWORD  0 EMITWORD  RENDD @ 7f + ffffff80 AND RSV EMITWORD   P @ Q @ - SET_LOADPOS + RENDL !  variable X  variable Y variable BUF variable CONT variable ENDREND variable RENDCONT  : ASS0 0 CONT ! X @ Y @ 8 LSHIFT 11 10 LSHIFT TILEB @ Y @ BWH @ * X @ + 32 * + DUP . 18 LSHIFT OR OR OR EMITWORD  TILEB @ Y @ BWH @ * X @ + 32 * + DUP . 8 RSHIFT 18 18 lshift OR EMITWORD 0 BUF ! THEN ;  : ASS1 1 CONT ! 73 X @ 8 LSHIFT Y @ 10 LSHIFT 11 18 LSHIFT OR OR OR EMITWORD  TILEB @ Y @ BWH @ * X @ + 20 * + EMITWORD  18 BUF ! ;  : ASS2 2 CONT ! BUF @ 73 8 LSHIFT X @ 10 LSHIFT Y @ 18 LSHIFT OR OR OR EMITWORD  11 TILEB @ Y @ BWH @ * X @ + 32 * + 8 LSHIFT OR EMITWORD  TILEB @ Y @ BWH @ * X @ + 20 * + 18 RSHIFT 18 8 LSHIFT OR BUF ! ;  : ASS3 3 CONT ! BUF @ 73 10 LSHIFT X @ 18 LSHIFT OR OR EMITWORD  Y @ 11 8 LSHIFT TILEB @ Y @ BWH @ * X @ + 32 * + 10 LSHIFT OR OR EMITWORD  TILEB @ Y @ BWH @ * X @ + 20 * + 10 RSHIFT  18 10 LSHIFT OR BUF ! ;  : ASS4 0 CONT ! BUF @ 73 18 LSHIFT OR EMITWORD  X @ Y @ 8 LSHIFT 11 10 LSHIFT TILEB @ Y @ BWH @ * X @ + 32 * + 18 LSHIFT OR OR OR EMITWORD  TILEB @ Y @ BWH @ * X @ + 32 * + 8 RSHIFT  18 18 LSHIFT OR EMITWORD 0 BUF ! ;  : CHKBUF3 2 = IF ASS3 ELSE ASS4 THEN ; : CHKBUF2 DUP 1 = IF DROP ASS2 ELSE CHKBUF3 THEN ; : CHKBUF DUP 0 = IF DROP ASS1 ELSE CHKBUF2 THEN ;  : FINBUF3 2 = IF BUF @ 19 8 LSHIFT or EMITWORD P @ 2 - P ! ELSE BUF @ 19 10 LSHIFT or EMITWORD P @ 1 - P ! THEN ; : FINBUF2 DUP 1 = IF DROP BUF @ 19 OR EMITWORD P @ 3 - P ! ELSE FINBUF3 THEN ; : FINBUF CONT @ DUP 0 = IF DROP P @ 4 - @ 19 18 lshift or P @ 4 - P ! EMITWORD ELSE FINBUF2 THEN ;  BUF @ EMITWORD  : LOOPY BEGIN CONT @ CHKBUF 1 + DUP Y ! DUP BHT @ = UNTIL ; : LOOPX X @ BEGIN Y @ LOOPY DROP 0 Y ! 1 + DUP X ! DUP BWH @ = UNTIL 100 . FINBUF 100 . P @ Q @ - SHADER @ + DUP RENDL ! ENDREND ! ;  SET_LOADPOS DUP RENDCONT !  SETPQ  72 00 00 00 EMIT32 ff 00 00 00 EMIT32 ff 00 00 00 EMIT32 00710000 FRAMEBUFFER @ 18 LSHIFT OR EMITWORD FRAMEBUFFER @ 8 RSHIFT RWH @ RSV2 18 LSHIFT OR EMITWORD RWH @ 8 RSHIFT RHT @ 8 LSHIFT 04 18 LSHIFT OR OR EMITWORD 00 73 00 00 EMIT32 1C 00 00 00 EMIT32 00 00 00 73 EMIT32  0 X ! 0 Y !  ASS0  0 X ! 1 Y !    LOOPX  variable BINF   BIND @ 7f + ffffff80 AND DUP SHADER !  BIND @ SETPQ  70 TILEB @ 8 Lshift or EMITWORD TILEB @ 18 Rshift TILEMEM @ 8 Lshift or EMITWORD TILEMEM @ 18 Rshift TILES @ 8 Lshift or EMITWORD TILES @ 18 Rshift BWH @ 8 lshift BHT @ 10 lshift 4 18 lshift or or or EMITWORD   66 32 38 06 EMIT32  0 EMITWORD  RWH @ RSV2 RHT @ RSV2 10 lshift or EMITWORD   02 00 03 60 EMIT32  67 EMITWORD  41 8 lshift RSHADER @ 10 LSHIFT or EMITWORD  RSHADER @ 10 RSHIFT 20 10 lshift 4 18 LSHIFT or or EMITWORD  VVC4 @ EMITWORD  IVVC4 @ EMITWORD  MVC4 @ EMITWORD 05 EMIT8 01 EMIT8 00 EMIT8 00 EMIT8  P @ Q @ - BIND @ + BINF !  P @ 1 - P !  P @ Q @ 2DUP - 3fc00000 constant V3DADDR  4 V3DADDR 20 + ! 0f0f0f0f V3DADDR 24 + ! 20 V3DADDR 100 + !  : ENDBINT 1 V3DADDR 138 + ! RENDCONT @ V3DADDR 114 + ! ENDREND @ V3DADDR 10c + ! ;  : LOOPBIND2 20 V3DADDR 104 + ! BEGIN V3DADDR 104 + @ 20 = UNTIL ENDBINT ;  : LOOPBIND 1 V3DADDR 134 + ! BIND @ V3DADDR 110 + ! BINF @ V3DADDR 108 + ! BEGIN V3DADDR 134 + @ 0 = UNTIL LOOPBIND2 ;  : LOOPADDR BEGIN V3DADDR 100 + @ 20 = UNTIL LOOPBIND ;  LOOPADDR 
